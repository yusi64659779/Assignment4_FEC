// <auto-generated />
using System;
using Federal_Election.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Federal_Election.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191124185121_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Federal_Election.Models.Candidate", b =>
                {
                    b.Property<string>("candidate_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Candidatescandidate_id");

                    b.Property<int>("active_through");

                    b.Property<bool>("candidate_inactive");

                    b.Property<string>("candidate_status");

                    b.Property<string>("district");

                    b.Property<int>("district_number");

                    b.Property<bool>("federal_funds_flag");

                    b.Property<string>("first_file_date");

                    b.Property<string>("flags");

                    b.Property<bool>("has_raised_funds");

                    b.Property<string>("incumbent_challenge");

                    b.Property<string>("incumbent_challenge_full");

                    b.Property<string>("last_f2_date");

                    b.Property<string>("last_file_date");

                    b.Property<DateTime>("load_date");

                    b.Property<string>("name");

                    b.Property<string>("office");

                    b.Property<string>("office_full");

                    b.Property<string>("party");

                    b.Property<string>("party_full");

                    b.Property<string>("state");

                    b.HasKey("candidate_id");

                    b.HasIndex("Candidatescandidate_id");

                    b.ToTable("Candidate");
                });

            modelBuilder.Entity("Federal_Election.Models.Candidates", b =>
                {
                    b.Property<string>("candidate_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("api_version");

                    b.HasKey("candidate_id");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("Federal_Election.Models.Committee", b =>
                {
                    b.Property<string>("committee_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Committeescommittee_id");

                    b.Property<string>("affiliated_committee_name");

                    b.Property<string>("committee_type");

                    b.Property<string>("committee_type_full");

                    b.Property<string>("designation");

                    b.Property<string>("designation_full");

                    b.Property<string>("filing_frequency");

                    b.Property<string>("first_file_date");

                    b.Property<string>("last_f1_date");

                    b.Property<string>("last_file_date");

                    b.Property<string>("name");

                    b.Property<string>("organization_type");

                    b.Property<string>("organization_type_full");

                    b.Property<string>("party");

                    b.Property<string>("party_full");

                    b.Property<string>("state");

                    b.Property<string>("treasurer_name");

                    b.HasKey("committee_id");

                    b.HasIndex("Committeescommittee_id");

                    b.ToTable("Committee");
                });

            modelBuilder.Entity("Federal_Election.Models.Committees", b =>
                {
                    b.Property<string>("committee_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("api_version");

                    b.HasKey("committee_id");

                    b.ToTable("Committees");
                });

            modelBuilder.Entity("Federal_Election.Models.Filing", b =>
                {
                    b.Property<string>("sub_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Filingssub_id");

                    b.Property<string>("amendment_indicator");

                    b.Property<int?>("amendment_version");

                    b.Property<string>("beginning_image_number");

                    b.Property<string>("candidate_id");

                    b.Property<string>("candidate_name");

                    b.Property<double?>("cash_on_hand_beginning_period");

                    b.Property<double?>("cash_on_hand_end_period");

                    b.Property<string>("committee_id");

                    b.Property<string>("committee_name");

                    b.Property<string>("committee_type");

                    b.Property<DateTime>("coverage_end_date");

                    b.Property<DateTime?>("coverage_start_date");

                    b.Property<string>("csv_url");

                    b.Property<int>("cycle");

                    b.Property<double?>("debts_owed_by_committee");

                    b.Property<double?>("debts_owed_to_committee");

                    b.Property<string>("document_description");

                    b.Property<string>("document_type");

                    b.Property<string>("document_type_full");

                    b.Property<string>("election_year");

                    b.Property<string>("ending_image_number");

                    b.Property<string>("fec_file_id");

                    b.Property<string>("fec_url");

                    b.Property<int?>("file_number");

                    b.Property<string>("form_category");

                    b.Property<string>("form_type");

                    b.Property<string>("house_personal_funds");

                    b.Property<string>("html_url");

                    b.Property<bool?>("is_amended");

                    b.Property<string>("means_filed");

                    b.Property<bool>("most_recent");

                    b.Property<int?>("most_recent_file_number");

                    b.Property<string>("net_donations");

                    b.Property<string>("office");

                    b.Property<string>("opposition_personal_funds");

                    b.Property<int?>("pages");

                    b.Property<string>("party");

                    b.Property<string>("pdf_url");

                    b.Property<int?>("previous_file_number");

                    b.Property<string>("primary_general_indicator");

                    b.Property<string>("receipt_date");

                    b.Property<string>("report_type");

                    b.Property<string>("report_type_full");

                    b.Property<int>("report_year");

                    b.Property<string>("request_type");

                    b.Property<string>("senate_personal_funds");

                    b.Property<string>("state");

                    b.Property<double?>("total_communication_cost");

                    b.Property<double?>("total_disbursements");

                    b.Property<string>("total_independent_expenditures");

                    b.Property<string>("total_individual_contributions");

                    b.Property<double?>("total_receipts");

                    b.Property<string>("treasurer_name");

                    b.Property<DateTime>("update_date");

                    b.HasKey("sub_id");

                    b.HasIndex("Filingssub_id");

                    b.ToTable("Filing");
                });

            modelBuilder.Entity("Federal_Election.Models.Filings", b =>
                {
                    b.Property<string>("sub_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("api_version");

                    b.HasKey("sub_id");

                    b.ToTable("Filings");
                });

            modelBuilder.Entity("Federal_Election.Models.Candidate", b =>
                {
                    b.HasOne("Federal_Election.Models.Candidates")
                        .WithMany("results")
                        .HasForeignKey("Candidatescandidate_id");
                });

            modelBuilder.Entity("Federal_Election.Models.Committee", b =>
                {
                    b.HasOne("Federal_Election.Models.Committees")
                        .WithMany("results")
                        .HasForeignKey("Committeescommittee_id");
                });

            modelBuilder.Entity("Federal_Election.Models.Filing", b =>
                {
                    b.HasOne("Federal_Election.Models.Filings")
                        .WithMany("results")
                        .HasForeignKey("Filingssub_id");
                });
#pragma warning restore 612, 618
        }
    }
}
